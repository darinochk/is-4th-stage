Subject: [PATCH] Fix food payments
---
Index: api/payment.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/api/payment.ts b/api/payment.ts
--- a/api/payment.ts	(revision 0407e76d28f3b207f47d67082c842e67830a16af)
+++ b/api/payment.ts	(revision d76ec5659b2b7e9e337c236202e0f18c3db2b478)
@@ -7,13 +7,15 @@
     description: string;
     orderDate: Date;
     amount: number;
-    transactionId: number;
-    transactionStatus: string;
+    transaction: {
+        id: number;
+        status: string;
+    };
 }
 
 export async function InitPayment(orderDetailsId: number): Promise<Payment> {
     try {
-        const res = await api.post('/payment/init/' + orderDetailsId);
+        const res = await api.post('/payments/init/' + orderDetailsId);
         return res.data;
     } catch (err: any) {
         DefaultErrorHandler(() => {})(err);
@@ -23,8 +25,8 @@
 
 export async function PayForOrder(paymentSessionId: number, accountNumber: string, setMessage: (message: Message) => void): Promise<Payment> {
     try {
-        const res = await api.post('/payment/pay/' + paymentSessionId, {accountNumber});
-        setMessage({isError: false, message: 'Оплата прошла успешно'});
+        const res = await api.post('/payments/pay/' + paymentSessionId + '?accountNumber=' + accountNumber);
+        setMessage({isError: false, message: 'Статус оплаты: ' + res.data?.transaction?.status});
         return res.data;
     } catch (err: any) {
         DefaultErrorHandler(() => {})(err);
Index: app/(content)/bookings/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/(content)/bookings/page.tsx b/app/(content)/bookings/page.tsx
--- a/app/(content)/bookings/page.tsx	(revision 0407e76d28f3b207f47d67082c842e67830a16af)
+++ b/app/(content)/bookings/page.tsx	(revision d76ec5659b2b7e9e337c236202e0f18c3db2b478)
@@ -123,7 +123,7 @@
                                 setOrders(orders.filter(e => e.id !== order.id));
                             })
                     }}>{order.foodName} ×{order.quantity} ({order.totalPrice}₽)</p>)}</div>}
-            <button disabled={payment?.transactionStatus === 'SUCCESS'} onClick={() => {
+            <button disabled={payment?.transaction?.status === 'SUCCESS'} onClick={() => {
                 if (orderDetails < 1) {
                     StartOrder(booking.id)
                         .then(id => {
@@ -134,10 +134,10 @@
                         });
                 } else
                     orderRef.current?.showModal();
-            }}>{payment?.transactionStatus === 'SUCCESS' ? 'Вы уже оплатили заказ' : 'Добавить еды'}
+            }}>{payment?.transaction?.status === 'SUCCESS' ? 'Вы уже оплатили заказ' : 'Добавить еды'}
             </button>
             {orders.length > 0 && orderDetails > -1 &&
-                <button disabled={payment?.transactionStatus === 'SUCCESS'} onClick={() => {
+                <button disabled={payment?.transaction?.status === 'SUCCESS'} onClick={() => {
                     if (changed) {
                         ConfirmOrder(orderDetails)
                             .then(orders => {
@@ -152,17 +152,17 @@
                         else
                             InitPayment(orderDetails).then(pay => {
                                 setPayment(pay);
-                                payRef.current?.showModal();
+                                setTimeout(() => payRef.current?.showModal(), 20);
                             })
                     }
-                }}>{changed ? 'Подтвердить еду' : payment?.transactionStatus === 'SUCCESS' ? 'Оплачено' : 'Оплатить'}
+                }}>{changed ? 'Подтвердить еду' : payment?.transaction?.status === 'SUCCESS' ? 'Оплачено' : 'Оплатить'}
                 </button>}
             <button onClick={deleteBooking}>Отменить бронь
             </button>
             {payment && <PaymentPopup ref={payRef} payment={payment} setPayment={paym => {
                 setPayment(paym);
-                if (paym.transactionStatus === 'SUCCESS')
-                    setTimeout(() => orderRef.current?.showModal(), 1500);
+                if (paym?.transaction?.status === 'SUCCESS')
+                    setTimeout(() => payRef.current?.close(), 1500);
             }}/>}
             <FoodOrderPopup orderDetails={orderDetails} ref={orderRef}
                             onOrder={order => setOrders([...orders, order])}/>
Index: app/(content)/page.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/(content)/page.tsx b/app/(content)/page.tsx
--- a/app/(content)/page.tsx	(revision 0407e76d28f3b207f47d67082c842e67830a16af)
+++ b/app/(content)/page.tsx	(revision d76ec5659b2b7e9e337c236202e0f18c3db2b478)
@@ -140,7 +140,7 @@
                       }}
                 >
                     <h3>Бронирование столика {card.deskNumber}</h3>
-                    <input type='hidden' value={card.deskNumber} name='deskId'/>
+                    <input type='hidden' value={card.id} name='deskId'/>
                     <input type='hidden' value='initial' name='status'/>
                     <label>Дата начала:
                         <input type="date" className={styles.text} onChange={e => setStartDate(e.currentTarget.value)}
Index: app/components/payment-popup.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/components/payment-popup.tsx b/app/components/payment-popup.tsx
--- a/app/components/payment-popup.tsx	(revision 0407e76d28f3b207f47d67082c842e67830a16af)
+++ b/app/components/payment-popup.tsx	(revision d76ec5659b2b7e9e337c236202e0f18c3db2b478)
@@ -21,23 +21,25 @@
     const [requestSent, setRequestSent] = useState<boolean>(false);
 
     return (
-        <dialog onClick={e => {
+        <dialog style={{padding: '10px'}} ref={dialogRef} onClick={e => {
             if ((e.target as HTMLElement).tagName === 'DIALOG' && e.target === e.currentTarget) dialogRef.current?.close();
         }}>
             <h1>Оплата</h1>
             <p>Заказчик: {payment.fullName}</p>
+            <p>Описание: {payment.description}</p>
             <p>Email: {payment.email}</p>
-            <p>Транзакция: {payment.transactionId}</p>
+            <p>Транзакция: {payment?.transaction?.id}</p>
             <p>Сумма: {payment.amount}</p>
-            <p>Статус: {payment.transactionStatus}</p>
+            <p>Статус: {payment?.transaction?.status}</p>
             <MessageComponent message={response}/>
             <div className={styles.buttons}>
-                <button disabled={requestSent || !response?.isError} onClick={() => {
+                <button disabled={requestSent} onClick={() => {
                     setResponse(null);
                     setRequestSent(true);
                     PayForOrder(payment.id, '', setResponse)
                         .then(pay => {
                             setPayment(pay);
+                            setRequestSent(false);
                         })
                 }}>{requestSent &&
                     <Spinner size={30} style={{margin: "-11px 0 -11px -32px", paddingRight: "32px"}}/>}Оплатить
